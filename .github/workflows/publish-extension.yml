name: Publish Extension Layer and Invoke Lambda

#  Commented out the tag trigger and added a branch trigger.
on:
  workflow_dispatch:
  # push:
  #   branches:
    # tags:
    #   - 'v*_extension'

jobs:
  publish-extension:
    runs-on: ubuntu-latest
    outputs:
      x86_arn: ${{ steps.publish.outputs.x86_arn }}
      arm_arn: ${{ steps.publish.outputs.arm_arn }}
      # tag_match: ${{ steps.extension-check-tag.outputs.match }} # No longer needed

    strategy:
      matrix:
        python-version: [ 3.12 ]
    steps:
      - uses: actions/checkout@v4
      # - name: Check Tag
      #   id: extension-check-tag
      #   run: |
      #     if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+(\.[0-9]+)*_extension$ ]]; then
      #       echo "match=true" >> $GITHUB_OUTPUT
      #     fi
          
      - name: Install publish dependencies
        # Commented out the 'if' condition.
        # if: steps.extension-check-tag.outputs.match == 'true'
        run: pip install -U awscli
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64, amd64
          
      - name: Publish extension layer
        #Commented out the 'if' condition.
        # if: steps.extension-check-tag.outputs.match == 'true'
        id: publish
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd extension
          ./publish-layer.sh

  invoke-lambda:
    needs: publish-extension 
    runs-on: ubuntu-latest
    # Commented out the job-level 'if' condition.
    # if: needs.publish-extension.outputs.tag_match == 'true'
    steps:
      - name: Invoke for Cold Start
        env:
          API_URL: ${{ secrets.API_GATEWAY_URL }}
          API_KEY: ${{ secrets.API_GATEWAY_KEY }}
        run: |
          echo "Invoking Lambda via API Gateway for cold start..."
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "x-api-key: $API_KEY" \
            --data '{ "x86_layer_arn": "${{ needs.publish-extension.outputs.x86_arn }}", "arm_layer_arn": "${{ needs.publish-extension.outputs.arm_arn }}", "execution_phase": "cold" }' \
            $API_URL

      - name: Wait for 8 minutes
        run: sleep 480

      - name: Invoke for Warm Start
        env:
          API_URL: ${{ secrets.API_GATEWAY_URL }}
          API_KEY: ${{ secrets.API_GATEWAY_KEY }}
        run: |
          echo "Invoking Lambda via API Gateway for warm start..."
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "x-api-key: $API_KEY" \
            --data '{ "x86_layer_arn": "${{ needs.publish-extension.outputs.x86_arn }}", "arm_layer_arn": "${{ needs.publish-extension.outputs.arm_arn }}", "execution_phase": "warm" }' \
            $API_URL
